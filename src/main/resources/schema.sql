DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS bookings;
DROP TABLE IF EXISTS requests;
DROP TABLE IF EXISTS items;
DROP TABLE IF EXISTS users;

CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(50) NOT NULL,
  email varchar(100) UNIQUE NOT NULL
);

CREATE TABLE  IF NOT EXISTS items (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(50) NOT NULL,
  description varchar(100) NOT NULL,
  is_available bool NOT NULL,
  owner_id bigint NOT NULL,
  request_id bigint,
  CONSTRAINT FKItemsOwner_id FOREIGN KEY (owner_id) REFERENCES users (id)
);

CREATE TABLE  IF NOT EXISTS requests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  description varchar(200) NOT NULL,
  requester_id bigint NOT NULL,
  created timestamp(0) NOT NULL,
  CONSTRAINT FKRequestsRequester_id FOREIGN KEY (requester_id) REFERENCES users (id)
);

CREATE TABLE  IF NOT EXISTS bookings (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  start_date timestamp(0) NOT NULL,
  end_date timestamp(0) NOT NULL,
  item_id bigint NOT NULL,
  booker_id bigint NOT NULL,
  status varchar(15) NOT NULL,
  CONSTRAINT FKBookingsItem_id FOREIGN KEY (item_id) REFERENCES items (id),
  CONSTRAINT FKBookingsBooker_id FOREIGN KEY (booker_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS comments (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  text VARCHAR NOT NULL,
  item_id BIGINT NOT NULL,
  author_id BIGINT NOT NULL,
  creation_time TIMESTAMP NOT NULL,
  CONSTRAINT FKCommentsItem_id FOREIGN KEY (item_id) REFERENCES items (id),
  CONSTRAINT FKCommentsAuthor_id FOREIGN KEY (author_id) REFERENCES users (id)
);

CREATE INDEX IF NOT EXISTS idx_users_id_email ON users(id,email);
CREATE INDEX IF NOT EXISTS idx_items_owner_id ON items(owner_id);
CREATE INDEX IF NOT EXISTS idx_items_id_owner_id ON items(id,owner_id);
