DROP TABLE IF EXISTS bookings;
DROP TABLE IF EXISTS booking_status;
DROP TABLE IF EXISTS requests;
DROP TABLE IF EXISTS items;
DROP TABLE IF EXISTS users;

CREATE TABLE users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(50) NOT NULL,
  email varchar(100) UNIQUE NOT NULL
);

CREATE TABLE items (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(50) NOT NULL,
  description varchar(100) NOT NULL,
  available bool NOT NULL,
  owner_id bigint NOT NULL,
  request_id bigint
);

CREATE TABLE requests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  description varchar(200) NOT NULL,
  user_id bigint NOT NULL,
  created timestamp NOT NULL
);

CREATE TABLE booking_status (
  id int PRIMARY KEY,
  status varchar(20)
);

CREATE TABLE bookings (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  start timestamp NOT NULL,
  ends timestamp NOT NULL,
  item_id bigint NOT NULL,
  booker bigint NOT NULL,
  status_id integer NOT NULL
);

ALTER TABLE items ADD FOREIGN KEY (owner_id) REFERENCES users (id);

ALTER TABLE requests ADD FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE bookings ADD FOREIGN KEY (item_id) REFERENCES items (id);
ALTER TABLE bookings ADD FOREIGN KEY (booker) REFERENCES users (id);
ALTER TABLE bookings ADD FOREIGN KEY (status_id) REFERENCES booking_status (id);

CREATE INDEX idx_users_id_email ON users(id,email);

CREATE INDEX idx_items_owner_id ON items(owner_id);
CREATE INDEX idx_items_id_owner_id ON items(id,owner_id);
